student.marks
# One way to sum up the rows
result <- vector('numeric', length = nrow(student.marks))
for (row in 1: nrow(student.marks)){
sum <- 0;
for(col in 1: ncol(student.marks)){
sum <- sum + student.marks[row, col]
}
result[row] <- sum
}
result
# Easier way to do this
# apply(data, margin, fun, ...)
# data - type of data you are working with
# margin - working with rows, 1, or col, 2, or both 1,2
apply(student.marks, 1, sum)
apply(student.marks, 2, sum)
apply(student.marks, 1, max)
# which.max - which column does the max exist in
apply(student.marks, 1, which.max)
colnames(student.marks)[apply(student.marks, 1, which.max)]
# Apply Demo
student.marks <- matrix(c(70L, 75L, 72L, 80L, 50L,
80L, 85L, 60L, 72L, 88L,
60L, 70L, 87L, 55L, 90L,
85L, 70L, 74L, 86L, 78L), ncol = 5, nrow = 4, byrow = TRUE)
rownames(student.marks) <- c('Jim', 'Bob', 'Poh', 'Roe')
colnames(students.makrs <- c('Phy', 'Chem', 'Bio', 'Hist'))
student.marks
# One way to sum up the rows
result <- vector('numeric', length = nrow(student.marks))
for (row in 1: nrow(student.marks)){
sum <- 0;
for(col in 1: ncol(student.marks)){
sum <- sum + student.marks[row, col]
}
result[row] <- sum
}
result
# Easier way to do this
# apply(data, margin, fun, ...)
# data - type of data you are working with
# margin - working with rows, 1, or col, 2, or both 1,2
apply(student.marks, 1, sum)
apply(student.marks, 2, sum)
apply(student.marks, 1, max)
# which.max - which column does the max exist in
apply(student.marks, 1, which.max)
colnames(student.marks)
# Apply Demo
student.marks <- matrix(c(70L, 75L, 72L, 80L, 50L,
80L, 85L, 60L, 72L, 88L,
60L, 70L, 87L, 55L, 90L,
85L, 70L, 74L, 86L, 78L), ncol = 5, nrow = 4, byrow = TRUE)
rownames(student.marks) <- c('Jim', 'Bob', 'Poh', 'Roe')
colnames(students.makrs) <- c('Phy', 'Chem', 'Bio', 'Hist')
student.marks
# One way to sum up the rows
result <- vector('numeric', length = nrow(student.marks))
for (row in 1: nrow(student.marks)){
sum <- 0;
for(col in 1: ncol(student.marks)){
sum <- sum + student.marks[row, col]
}
result[row] <- sum
}
result
# Easier way to do this
# apply(data, margin, fun, ...)
# data - type of data you are working with
# margin - working with rows, 1, or col, 2, or both 1,2
apply(student.marks, 1, sum)
apply(student.marks, 2, sum)
apply(student.marks, 1, max)
# which.max - which column does the max exist in
apply(student.marks, 1, which.max)
colnames(student.marks)
# Apply Demo
student.marks <- matrix(c(70L, 75L, 72L, 80L, 50L,
80L, 85L, 60L, 72L, 88L,
60L, 70L, 87L, 55L, 90L,
85L, 70L, 74L, 86L, 78L), ncol = 5, nrow = 4, byrow = TRUE)
rownames(student.marks) <- c('Jim', 'Bob', 'Poh', 'Roe')
colnames(students.makrs) <- c('Phy', 'Chem', 'Math', 'Bio', 'Hist')
student.marks
# One way to sum up the rows
result <- vector('numeric', length = nrow(student.marks))
for (row in 1: nrow(student.marks)){
sum <- 0;
for(col in 1: ncol(student.marks)){
sum <- sum + student.marks[row, col]
}
result[row] <- sum
}
result
# Easier way to do this
# apply(data, margin, fun, ...)
# data - type of data you are working with
# margin - working with rows, 1, or col, 2, or both 1,2
apply(student.marks, 1, sum)
apply(student.marks, 2, sum)
apply(student.marks, 1, max)
# which.max - which column does the max exist in
apply(student.marks, 1, which.max)
colnames(student.marks)
# Apply Demo
student.marks <- matrix(c(70L, 75L, 72L, 80L, 50L,
80L, 85L, 60L, 72L, 88L,
60L, 70L, 87L, 55L, 90L,
85L, 70L, 74L, 86L, 78L), nrow = 4, ncol = 5, byrow = TRUE)
rownames(student.marks) <- c('Jim', 'Bob', 'Poh', 'Roe')
colnames(students.makrs) <- c('Phy', 'Chem', 'Math', 'Bio', 'Hist')
student.marks
# One way to sum up the rows
result <- vector('numeric', length = nrow(student.marks))
for (row in 1: nrow(student.marks)){
sum <- 0;
for(col in 1: ncol(student.marks)){
sum <- sum + student.marks[row, col]
}
result[row] <- sum
}
result
# Easier way to do this
# apply(data, margin, fun, ...)
# data - type of data you are working with
# margin - working with rows, 1, or col, 2, or both 1,2
apply(student.marks, 1, sum)
apply(student.marks, 2, sum)
apply(student.marks, 1, max)
# which.max - which column does the max exist in
apply(student.marks, 1, which.max)
colnames(student.marks)
student.marks <- matrix(c(70L, 75L, 72L, 80L, 50L,
80L, 85L, 60L, 72L, 88L,
60L, 70L, 87L, 55L, 90L,
85L, 70L, 74L, 86L, 78L), ncol = 5, nrow = 4, byrow = TRUE)
rownames(student.marks) <- c('Jim', 'Bob', 'Poh', 'Roe')
colnames(students.makrs) <- c('Phy', 'Chem', 'Math', 'Bio', 'Hist')
student.marks
# Apply Demo
student.marks <- matrix(c(70L, 75L, 72L, 80L, 50L,
80L, 85L, 60L, 72L, 88L,
60L, 70L, 87L, 55L, 90L,
85L, 70L, 74L, 86L, 78L), ncol = 5, nrow = 4, byrow = TRUE)
rownames(student.marks) <- c('Jim', 'Bob', 'Poh', 'Roe')
colnames(students.marks) <- c('Phy', 'Chem', 'Math', 'Bio', 'Hist')
student.marks
# One way to sum up the rows
result <- vector('numeric', length = nrow(student.marks))
for (row in 1: nrow(student.marks)){
sum <- 0;
for(col in 1: ncol(student.marks)){
sum <- sum + student.marks[row, col]
}
result[row] <- sum
}
result
# Easier way to do this
# apply(data, margin, fun, ...)
# data - type of data you are working with
# margin - working with rows, 1, or col, 2, or both 1,2
apply(student.marks, 1, sum)
apply(student.marks, 2, sum)
apply(student.marks, 1, max)
# which.max - which column does the max exist in
apply(student.marks, 1, which.max)
colnames(student.marks)
# Apply Demo
student.marks <- matrix(c(70L, 75L, 72L, 80L, 50L,
80L, 85L, 60L, 72L, 88L,
60L, 70L, 87L, 55L, 90L,
85L, 70L, 74L, 86L, 78L), ncol = 5, nrow = 4, byrow = TRUE)
rownames(student.marks) <- c('Jim', 'Bob', 'Poh', 'Roe')
colnames(student.marks) <- c('Phy', 'Chem', 'Math', 'Bio', 'Hist')
student.marks
# One way to sum up the rows
result <- vector('numeric', length = nrow(student.marks))
for (row in 1: nrow(student.marks)){
sum <- 0;
for(col in 1: ncol(student.marks)){
sum <- sum + student.marks[row, col]
}
result[row] <- sum
}
result
# Easier way to do this
# apply(data, margin, fun, ...)
# data - type of data you are working with
# margin - working with rows, 1, or col, 2, or both 1,2
apply(student.marks, 1, sum)
apply(student.marks, 2, sum)
apply(student.marks, 1, max)
# which.max - which column does the max exist in
apply(student.marks, 1, which.max)
colnames(student.marks)
# Apply Demo
student.marks <- matrix(c(70L, 75L, 72L, 80L, 50L,
80L, 85L, 60L, 72L, 88L,
60L, 70L, 87L, 55L, 90L,
85L, 70L, 74L, 86L, 78L), ncol = 5, nrow = 4, byrow = TRUE)
rownames(student.marks) <- c('Jim', 'Bob', 'Poh', 'Roe')
colnames(student.marks) <- c('Phy', 'Chem', 'Math', 'Bio', 'Hist')
student.marks
# One way to sum up the rows
result <- vector('numeric', length = nrow(student.marks))
for (row in 1: nrow(student.marks)){
sum <- 0;
for(col in 1: ncol(student.marks)){
sum <- sum + student.marks[row, col]
}
result[row] <- sum
}
result
# Easier way to do this
# apply(data, margin, fun, ...)
# data - type of data you are working with
# margin - working with rows, 1, or col, 2, or both 1,2
apply(student.marks, 1, sum)
apply(student.marks, 2, sum)
apply(student.marks, 1, max)
# which.max - which column does the max exist in
apply(student.marks, 1, which.max)
colnames(student.marks)[apply(student.marks, 1, which.max)]
# Apply Demo
student.marks <- matrix(c(70L, 75L, 72L, 80L, 50L,
80L, 85L, 60L, 72L, 88L,
60L, 70L, 87L, 55L, 90L,
85L, 70L, 74L, 86L, 78L), ncol = 5, nrow = 4, byrow = TRUE)
rownames(student.marks) <- c('Jim', 'Bob', 'Poh', 'Roe')
colnames(student.marks) <- c('Phy', 'Chem', 'Math', 'Bio', 'Hist')
student.marks
# One way to sum up the rows
result <- vector('numeric', length = nrow(student.marks))
for (row in 1: nrow(student.marks)){
sum <- 0;
for(col in 1: ncol(student.marks)){
sum <- sum + student.marks[row, col]
}
result[row] <- sum
}
result
# Easier way to do this
# apply(data, margin, fun, ...)
# data - type of data you are working with
# margin - working with rows, 1, or col, 2, or both 1,2
apply(student.marks, 1, sum)
apply(student.marks, 1, max)
# which.max - which column does the max exist in
apply(student.marks, 1, which.max)
colnames(student.marks)[apply(student.marks, 1, which.max)]
apply(student.marks, 2, mean)
apply(student.marks,2,max)
# Apply Demo
student.marks <- matrix(c(70L, 75L, 72L, 80L, 50L,
80L, 85L, 60L, 72L, 88L,
60L, 70L, 87L, 55L, 90L,
85L, 70L, 74L, 86L, 78L), ncol = 5, nrow = 4, byrow = TRUE)
rownames(student.marks) <- c('Jim', 'Bob', 'Poh', 'Roe')
colnames(student.marks) <- c('Phy', 'Chem', 'Math', 'Bio', 'Hist')
student.marks
# One way to sum up the rows
result <- vector('numeric', length = nrow(student.marks))
for (row in 1: nrow(student.marks)){
sum <- 0;
for(col in 1: ncol(student.marks)){
sum <- sum + student.marks[row, col]
}
result[row] <- sum
}
result
# Easier way to do this
# apply(data, margin, fun, ...)
# data - type of data you are working with
# margin - working with rows, 1, or col, 2, or both 1,2
apply(student.marks, 1, sum)
apply(student.marks, 1, max)
# which.max - which column does the max exist in
apply(student.marks, 1, which.max)
colnames(student.marks)[apply(student.marks, 1, which.max)]
apply(student.marks, 2, mean)
apply(student.marks,2,max)
rownames(student.marks[apply(student.marks,2,which.max)])
# Apply Demo
student.marks <- matrix(c(70L, 75L, 72L, 80L, 50L,
80L, 85L, 60L, 72L, 88L,
60L, 70L, 87L, 55L, 90L,
85L, 70L, 74L, 86L, 78L), ncol = 5, nrow = 4, byrow = TRUE)
rownames(student.marks) <- c('Jim', 'Bob', 'Poh', 'Roe')
colnames(student.marks) <- c('Phy', 'Chem', 'Math', 'Bio', 'Hist')
student.marks
# One way to sum up the rows
result <- vector('numeric', length = nrow(student.marks))
for (row in 1: nrow(student.marks)){
sum <- 0;
for(col in 1: ncol(student.marks)){
sum <- sum + student.marks[row, col]
}
result[row] <- sum
}
result
# Easier way to do this
# apply(data, margin, fun, ...)
# data - type of data you are working with
# margin - working with rows, 1, or col, 2, or both 1,2
apply(student.marks, 1, sum)
apply(student.marks, 1, max)
# which.max - which column does the max exist in
apply(student.marks, 1, which.max)
colnames(student.marks)[apply(student.marks, 1, which.max)]
apply(student.marks, 2, mean)
apply(student.marks,2,max)
rownames(student.marks)[apply(student.marks,2,which.max)]
# Apply Demo
student.marks <- matrix(c(70L, 75L, 72L, 80L, 50L,
80L, 85L, 60L, 72L, 88L,
60L, 70L, 87L, 55L, 90L,
85L, 70L, 74L, 86L, 78L), ncol = 5, nrow = 4, byrow = TRUE)
rownames(student.marks) <- c('Jim', 'Bob', 'Poh', 'Roe')
colnames(student.marks) <- c('Phy', 'Chem', 'Math', 'Bio', 'Hist')
student.marks
# One way to sum up the rows
result <- vector('numeric', length = nrow(student.marks))
for (row in 1: nrow(student.marks)){
sum <- 0;
for(col in 1: ncol(student.marks)){
sum <- sum + student.marks[row, col]
}
result[row] <- sum
}
result
# Easier way to do this
# apply(data, margin, fun, ...)
# data - type of data you are working with
# margin - working with rows, 1, or col, 2, or both 1,2
apply(student.marks, 1, sum)
apply(student.marks, 1, max)
# which.max - which column does the max exist in
apply(student.marks, 1, which.max)
colnames(student.marks)[apply(student.marks, 1, which.max)]
apply(student.marks, 2, mean)
apply(student.marks,2,max)
rownames(student.marks)[apply(student.marks,2,which.max)]
apply(student.marks, 1:2, function(x) x + 2)
# Apply Demo
student.marks <- matrix(c(70L, 75L, 72L, 80L, 50L,
80L, 85L, 60L, 72L, 88L,
60L, 70L, 87L, 55L, 90L,
85L, 70L, 74L, 86L, 78L), ncol = 5, nrow = 4, byrow = TRUE)
rownames(student.marks) <- c('Jim', 'Bob', 'Poh', 'Roe')
colnames(student.marks) <- c('Phy', 'Chem', 'Math', 'Bio', 'Hist')
student.marks
# One way to sum up the rows
result <- vector('numeric', length = nrow(student.marks))
for (row in 1: nrow(student.marks)){
sum <- 0;
for(col in 1: ncol(student.marks)){
sum <- sum + student.marks[row, col]
}
result[row] <- sum
}
result
# Easier way to do this
# apply(data, margin, fun, ...)
# data - type of data you are working with
# margin - working with rows, 1, or col, 2, or both 1,2
apply(student.marks, 1, sum)
apply(student.marks, 1, max)
# which.max - which column does the max exist in
apply(student.marks, 1, which.max)
colnames(student.marks)[apply(student.marks, 1, which.max)]
apply(student.marks, 2, mean)
apply(student.marks,2,max)
rownames(student.marks)[apply(student.marks,2,which.max)]
print('before')
student.marks
print('after')
apply(student.marks, 1:2, function(x) x + 2)
# Packages and Libraries
library()
packages <- installed.packages()
packages
# Packages and Libraries
library()
packages <- installed.packages()
view(packages)
# Packages and Libraries
library()
packages <- installed.packages()
View(packages)
# Packages and Libraries
#library()
#packages <- installed.packages()
#View(packages)
search()
#Packages and Libraries
#library()
#packages <- installed.packages()
#View(packages)
search()
#Load package using library function
library('parallel')
library(parallel)
#Packages and Libraries
#library()
#packages <- installed.packages()
#View(packages)
search()
#Load package using library function
library('parallel')
library(parallel)
search()
#Packages and Libraries
#library()
#packages <- installed.packages()
#View(packages)
search()
#Load package using library function
library('parallel')
#or
library(parallel)
search()
#unload a package
detach(package:parallel, unload = TRUE)
#Packages and Libraries
#library()
#packages <- installed.packages()
#View(packages)
search()
#Load package using library function
library('parallel')
#or
library(parallel)
search()
#unload a package
detach(package:parallel, unload = TRUE)
search()
detach("package:graphics", unload=TRUE)
library("graphics", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
library("parallel", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
detach("package:parallel", unload=TRUE)
library(newpackage)
install.packages("ggplot2")
setRepositories()
install.packages("ggplot2")
install.packages(c('ggplot2', 'randomForest', 'RColorBrewer')) #multiple packages
library("ggplot2", lib.loc="~/Library/R/3.2/library")
detach("package:ggplot2", unload=TRUE)
install.packages(c('ggplot2', 'randomForest', 'RColorBrewer')) #multiple packages
install.packages("ggplot2")
install.packages("ggplot2")
getwd()
getwd()
setwd('Users/paul.pelayo/Desktop/RProgramming')
getwd()
setwd('/Users/paul.pelayo/Desktop/RProgramming')
# Importing CSV Files
getwd()
setwd('/Users/paul.pelayo/Desktop/RProgramming')
getwd()
getwd()
setwd(getwd())
getwd(
setwd(getwd())
getwd()
setwd('/Users/paul.pelayo/Desktop/RProgramming/Practice/assignment1')
getwd()
pollutantmean <- function(directory, pollutant, id = 1:332){
setwd('/Users/paul.pelayo/Desktop/RProgramming/Practice/assignment1')
getwd()
file <- file.path("specdata", "001.csv")
my.data <- read.csv(file)
str(my.data)
my.data
}
pollutantmean()
print(paste('hello', 2))
pollutantmean <- function(directory, pollutant, id = 1:332){
setwd('/Users/paul.pelayo/Desktop/RProgramming/Practice/assignment1')
getwd()
for (i in id){
if (i = 1){
file <- file.path('specdata', paste('00', i))
file <- file.path("specdata", "001.csv")
my.data <- read.csv(file)
str(my.data)
my.data
}
break;
}
}
pollutantmean()
pollutantmean <- function(directory, pollutant, id = 1:332){
setwd('/Users/paul.pelayo/Desktop/RProgramming/Practice/assignment1')
getwd()
for (i in id){
if (i < 10){
data <- file.path('specdata', paste('00', i))
}
else if (i >= 10 & i < 100){
data <- file.path('specdata', paste('0', i))
}
else{
data < file.path('specdata', as.character(i))
}
data = na.omit(data)
observations = observations + nrow(data)
data
observations
}
}
pollutantmean()
